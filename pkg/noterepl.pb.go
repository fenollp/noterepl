// Code generated by protoc-gen-go. DO NOT EDIT.
// source: noterepl.proto

package pkg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Value_Kind int32

const (
	Value_EMPTY      Value_Kind = 0
	Value_is_null    Value_Kind = 1
	Value_is_str     Value_Kind = 2
	Value_is_number  Value_Kind = 3
	Value_is_list    Value_Kind = 4
	Value_is_hashmap Value_Kind = 5
	Value_is_url     Value_Kind = 6
)

var Value_Kind_name = map[int32]string{
	0: "EMPTY",
	1: "is_null",
	2: "is_str",
	3: "is_number",
	4: "is_list",
	5: "is_hashmap",
	6: "is_url",
}

var Value_Kind_value = map[string]int32{
	"EMPTY":      0,
	"is_null":    1,
	"is_str":     2,
	"is_number":  3,
	"is_list":    4,
	"is_hashmap": 5,
	"is_url":     6,
}

func (x Value_Kind) String() string {
	return proto.EnumName(Value_Kind_name, int32(x))
}

func (Value_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c16ddaca6537879b, []int{1, 0}
}

type Object struct {
	Value                *Value   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Ptr                  int64    `protobuf:"varint,2,opt,name=ptr,proto3" json:"ptr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_c16ddaca6537879b, []int{0}
}

func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Object) GetPtr() int64 {
	if m != nil {
		return m.Ptr
	}
	return 0
}

// Only one of these fields are ever set at once
// Not using `oneof` here as types gets less weird this way.
type Value struct {
	Kind                 Value_Kind         `protobuf:"varint,1,opt,name=kind,proto3,enum=Value_Kind" json:"kind,omitempty"`
	Str                  string             `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
	Number               float64            `protobuf:"fixed64,3,opt,name=number,proto3" json:"number,omitempty"`
	List                 []*Object          `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	Hashmap              map[string]*Object `protobuf:"bytes,5,rep,name=hashmap,proto3" json:"hashmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Url                  string             `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_c16ddaca6537879b, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetKind() Value_Kind {
	if m != nil {
		return m.Kind
	}
	return Value_EMPTY
}

func (m *Value) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *Value) GetNumber() float64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Value) GetList() []*Object {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *Value) GetHashmap() map[string]*Object {
	if m != nil {
		return m.Hashmap
	}
	return nil
}

func (m *Value) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type EvalReq struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvalReq) Reset()         { *m = EvalReq{} }
func (m *EvalReq) String() string { return proto.CompactTextString(m) }
func (*EvalReq) ProtoMessage()    {}
func (*EvalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c16ddaca6537879b, []int{2}
}

func (m *EvalReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvalReq.Unmarshal(m, b)
}
func (m *EvalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvalReq.Marshal(b, m, deterministic)
}
func (m *EvalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvalReq.Merge(m, src)
}
func (m *EvalReq) XXX_Size() int {
	return xxx_messageInfo_EvalReq.Size(m)
}
func (m *EvalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EvalReq.DiscardUnknown(m)
}

var xxx_messageInfo_EvalReq proto.InternalMessageInfo

func (m *EvalReq) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *EvalReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type EvalRep struct {
	Stderr               string   `protobuf:"bytes,1,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Result               *Object  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvalRep) Reset()         { *m = EvalRep{} }
func (m *EvalRep) String() string { return proto.CompactTextString(m) }
func (*EvalRep) ProtoMessage()    {}
func (*EvalRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_c16ddaca6537879b, []int{3}
}

func (m *EvalRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvalRep.Unmarshal(m, b)
}
func (m *EvalRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvalRep.Marshal(b, m, deterministic)
}
func (m *EvalRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvalRep.Merge(m, src)
}
func (m *EvalRep) XXX_Size() int {
	return xxx_messageInfo_EvalRep.Size(m)
}
func (m *EvalRep) XXX_DiscardUnknown() {
	xxx_messageInfo_EvalRep.DiscardUnknown(m)
}

var xxx_messageInfo_EvalRep proto.InternalMessageInfo

func (m *EvalRep) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *EvalRep) GetResult() *Object {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterEnum("Value_Kind", Value_Kind_name, Value_Kind_value)
	proto.RegisterType((*Object)(nil), "Object")
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterMapType((map[string]*Object)(nil), "Value.HashmapEntry")
	proto.RegisterType((*EvalReq)(nil), "EvalReq")
	proto.RegisterType((*EvalRep)(nil), "EvalRep")
}

func init() { proto.RegisterFile("noterepl.proto", fileDescriptor_c16ddaca6537879b) }

var fileDescriptor_c16ddaca6537879b = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0x4d, 0x6b, 0xdc, 0x30,
	0x10, 0x8d, 0xbf, 0xb4, 0xbb, 0xb3, 0xed, 0x22, 0xa6, 0x50, 0xcc, 0x36, 0x25, 0xc6, 0x27, 0x5f,
	0xea, 0x83, 0x7b, 0x49, 0x7b, 0x4c, 0x31, 0x14, 0xfa, 0x15, 0x44, 0x29, 0xb4, 0x97, 0xc5, 0x8e,
	0xc5, 0xc6, 0x5d, 0xc5, 0x76, 0xf5, 0x11, 0xc8, 0x4f, 0xed, 0xbf, 0x29, 0x92, 0xe5, 0x50, 0x72,
	0x7b, 0xf3, 0xe6, 0x3d, 0xcd, 0x9b, 0x41, 0xb0, 0x1b, 0x46, 0xcd, 0x25, 0x9f, 0x44, 0x39, 0xc9,
	0x51, 0x8f, 0xf9, 0x25, 0x90, 0x6f, 0xed, 0x6f, 0x7e, 0xa3, 0xf1, 0x1c, 0x92, 0xfb, 0x46, 0x18,
	0x9e, 0x06, 0x59, 0x50, 0x6c, 0x2b, 0x52, 0xfe, 0xb0, 0x15, 0x9b, 0x49, 0xa4, 0x10, 0x4d, 0x5a,
	0xa6, 0x61, 0x16, 0x14, 0x11, 0xb3, 0x30, 0xff, 0x1b, 0x42, 0xe2, 0x24, 0x78, 0x01, 0xf1, 0xa9,
	0x1f, 0x3a, 0x67, 0xdc, 0x55, 0xdb, 0xd9, 0x58, 0x7e, 0xea, 0x87, 0x8e, 0xb9, 0x86, 0x35, 0x2b,
	0x6f, 0xde, 0x30, 0x0b, 0xf1, 0x25, 0x90, 0xc1, 0xdc, 0xb5, 0x5c, 0xa6, 0x51, 0x16, 0x14, 0x01,
	0xf3, 0x15, 0xbe, 0x82, 0x58, 0xf4, 0x4a, 0xa7, 0x71, 0x16, 0x15, 0xdb, 0x6a, 0x55, 0xce, 0xd9,
	0x98, 0x23, 0xf1, 0x0d, 0xac, 0x6e, 0x1b, 0x75, 0x7b, 0xd7, 0x4c, 0x69, 0xe2, 0xfa, 0x2f, 0xfc,
	0xa8, 0x8f, 0x33, 0x5b, 0x0f, 0x5a, 0x3e, 0xb0, 0x45, 0x63, 0xa7, 0x1a, 0x29, 0x52, 0x32, 0x4f,
	0x35, 0x52, 0xec, 0x3f, 0xc0, 0xb3, 0xff, 0xa5, 0x56, 0x71, 0xe2, 0x0f, 0x2e, 0xf7, 0x86, 0x59,
	0x88, 0xaf, 0x97, 0x23, 0x84, 0xee, 0x08, 0x8f, 0x01, 0x66, 0xf6, 0x7d, 0x78, 0x19, 0xe4, 0x2d,
	0xc4, 0x76, 0x35, 0xdc, 0x40, 0x52, 0x7f, 0xb9, 0xfe, 0xfe, 0x93, 0x9e, 0xe1, 0x16, 0x56, 0xbd,
	0x3a, 0x0c, 0x46, 0x08, 0x1a, 0x20, 0x00, 0xe9, 0xd5, 0x41, 0x69, 0x49, 0x43, 0x7c, 0x0e, 0x1b,
	0xd7, 0xb0, 0xbb, 0xd1, 0xc8, 0xeb, 0xec, 0x2e, 0x34, 0xc6, 0x1d, 0x40, 0xaf, 0x0e, 0x3e, 0x2c,
	0x4d, 0xbc, 0xcf, 0x48, 0x41, 0x49, 0xfe, 0x0e, 0x56, 0xf5, 0x7d, 0x23, 0x18, 0xff, 0x83, 0x7b,
	0x58, 0x8b, 0x66, 0x38, 0x9a, 0xe6, 0xc8, 0x7d, 0xd0, 0xc7, 0x1a, 0x11, 0xe2, 0x9b, 0xb1, 0xe3,
	0xfe, 0xb0, 0x0e, 0xe7, 0x57, 0x8b, 0x75, 0xb2, 0x47, 0x56, 0xba, 0xe3, 0x52, 0x7a, 0xa3, 0xaf,
	0xf0, 0x02, 0x88, 0xe4, 0xca, 0x08, 0xfd, 0x74, 0x4b, 0x4f, 0x57, 0x05, 0xac, 0xbf, 0x8e, 0x9a,
	0xb3, 0xfa, 0xfa, 0x33, 0x9e, 0x43, 0x6c, 0xdf, 0xc3, 0x75, 0xe9, 0x13, 0xed, 0x17, 0x34, 0xe5,
	0x67, 0x57, 0xc9, 0xaf, 0x68, 0x3a, 0x1d, 0x5b, 0xe2, 0x3e, 0xd3, 0xdb, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x9c, 0x2d, 0x0a, 0xba, 0x5e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoteREPLClient is the client API for NoteREPL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoteREPLClient interface {
	Eval(ctx context.Context, in *EvalReq, opts ...grpc.CallOption) (*EvalRep, error)
}

type noteREPLClient struct {
	cc *grpc.ClientConn
}

func NewNoteREPLClient(cc *grpc.ClientConn) NoteREPLClient {
	return &noteREPLClient{cc}
}

func (c *noteREPLClient) Eval(ctx context.Context, in *EvalReq, opts ...grpc.CallOption) (*EvalRep, error) {
	out := new(EvalRep)
	err := c.cc.Invoke(ctx, "/NoteREPL/Eval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoteREPLServer is the server API for NoteREPL service.
type NoteREPLServer interface {
	Eval(context.Context, *EvalReq) (*EvalRep, error)
}

func RegisterNoteREPLServer(s *grpc.Server, srv NoteREPLServer) {
	s.RegisterService(&_NoteREPL_serviceDesc, srv)
}

func _NoteREPL_Eval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoteREPLServer).Eval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NoteREPL/Eval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoteREPLServer).Eval(ctx, req.(*EvalReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NoteREPL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NoteREPL",
	HandlerType: (*NoteREPLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Eval",
			Handler:    _NoteREPL_Eval_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "noterepl.proto",
}
